<html>                                                                  
<head>                                                                  
<script type="text/javascript" src="jquery.js"></script>          
<script type="text/javascript">

function render() {
  // draw the table based on x and ylimits
  for (i = 0;i < this.ylimit;i++) {
    cells = "";
    for (j = 0;j < this.xlimit;j++) {
      cells += "<td></td>";
    }
    $("<tr>" + cells + "</tr>").appendTo(this.table);
  }
  
  this.xwidth = Math.round($(this.table).width() / this.xlimit);
  $(this.table + " tr td").css({ "width" : this.xwidth + "px", "height" : this.xwidth + "px" });
}

function update(x, y) {
  $.post(this.dback + "/update", { x: x / this.xwidth, y: y / this.xwidth }, function(data) {
  });  
  // correct widths so the placed object is centered (since it is placed according to top-left coordinate)
  var width_correction = this.unit_width / 2;
  x -= width_correction;
  y -= width_correction;
  $("<img class='unit' src='white.png' />").css({ "left":x + "px", "top":y + "px" }).appendTo(this.container);
}

// load grid data points from web service
function load_points() {
  var gv = this;
  $.get(this.dback + "/points", function(data) {
    var items = eval(data);  
    $.each(items, function(i,item) {
      // TODO: add opacity in, with item.opacity
      gv.update(item.x * gv.xwidth, item.y * gv.xwidth);    
    });
  });
}

// TODO: redefine the function definition to take an options hash instead
function GridView(xlimit, ylimit, dback, table, container, unit_width) {
  this.xlimit = xlimit;
  this.ylimit = ylimit;
  this.dback = dback;  
  this.table = table;
  this.container = container;
  this.unit_width = unit_width;
  this.xwidth = 0;
  
  // methods
  this.render = render;
  this.update = update;
  this.load_points = load_points;  
  
  // events
  $(this.table).bind("click", { grid_view : this }, click_update);
}

// not part of any object
function click_update(e) {
  // clicks should snap to grid  
  // do this by dividing by xwidth, rounding the result, then multiplying by that
  var x = (e.pageX - $(grid_view.container).offset().left);
  x = Math.round(x / grid_view.xwidth) * grid_view.xwidth;
	var y = (e.pageY - $(grid_view.container).offset().top);
	y = Math.round(y / grid_view.xwidth) * grid_view.xwidth;
	
	grid_view.update(x, y);
}

$(document).ready(function() {
  grid_view = new GridView(200, 16, "http://localhost:4567", "#grid","#grid_container",12);
  grid_view.render();
  grid_view.load_points();
});

var grid_view;

</script>

<style type="text/css">

body {
  margin: 0;
  padding: 0;
}
#grid_container {
  margin-top: 20px;
  margin-left: 20px;
  width: 1600px;
  position: relative;
}
#grid {
  width: 100%;
  border-collapse: collapse;
  background-color: #A2A2A2;
}
#grid tr td {
  font-size: 12px;
  border: 1px solid silver;
  padding: 4px;
}
img.unit {
  position: absolute;
  width: 12px;
}

</style>

</head>
<body>
<div id="grid_container">
  <table id="grid">
  </table>
</div>
</body>
</html>